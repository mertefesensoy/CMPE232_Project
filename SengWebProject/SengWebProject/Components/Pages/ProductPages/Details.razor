@page "/products/details"
@using Microsoft.EntityFrameworkCore
@using DataAcess2
@inject IDbContextFactory<SengWebProject.Data.SengWebProjectContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Product</h2>
    <hr />
    @if (product is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@product.Name</dd>
            <dt class="col-sm-2">Brand</dt>
            <dd class="col-sm-10">@product.Brand</dd>
            <dt class="col-sm-2">Flavor</dt>
            <dd class="col-sm-10">@product.Flavor</dd>
            <dt class="col-sm-2">PackSize</dt>
            <dd class="col-sm-10">@product.PackSize</dd>
            <dt class="col-sm-2">Price</dt>
            <dd class="col-sm-10">@product.Price</dd>
            <dt class="col-sm-2">LastModified</dt>
            <dd class="col-sm-10">@product.LastModified</dd>
        </dl>
        <div>
            <a href="@($"/products/edit?productid={product.ProductID}")">Edit</a> |
            <a href="@($"/products")">Back to List</a>
        </div>
    }
</div>

@code {
    private Product? product;

    [SupplyParameterFromQuery]
    private int ProductID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        product = await context.Products.FirstOrDefaultAsync(m => m.ProductID == ProductID);

        if (product is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
