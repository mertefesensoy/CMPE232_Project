@page "/products/create"
@using Microsoft.EntityFrameworkCore
@using DataAcess2
@inject IDbContextFactory<SengWebProject.Data.SengWebProjectContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Product</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Product" OnValidSubmit="AddProduct" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Product.Name" class="form-control" /> 
                <ValidationMessage For="() => Product.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="brand" class="form-label">Brand:</label> 
                <InputText id="brand" @bind-Value="Product.Brand" class="form-control" /> 
                <ValidationMessage For="() => Product.Brand" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="flavor" class="form-label">Flavor:</label> 
                <InputText id="flavor" @bind-Value="Product.Flavor" class="form-control" /> 
                <ValidationMessage For="() => Product.Flavor" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="packsize" class="form-label">PackSize:</label> 
                <InputText id="packsize" @bind-Value="Product.PackSize" class="form-control" /> 
                <ValidationMessage For="() => Product.PackSize" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="price" class="form-label">Price:</label> 
                <InputNumber id="price" @bind-Value="Product.Price" class="form-control" /> 
                <ValidationMessage For="() => Product.Price" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lastmodified" class="form-label">LastModified:</label> 
                <InputDate id="lastmodified" @bind-Value="Product.LastModified" class="form-control" /> 
                <ValidationMessage For="() => Product.LastModified" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/products">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Product Product { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddProduct()
    {
        using var context = DbFactory.CreateDbContext();
        context.Products.Add(Product);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/products");
    }
}
