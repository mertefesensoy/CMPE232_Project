@page "/shipments/details"
@using Microsoft.EntityFrameworkCore
@using DataAcess2
@inject IDbContextFactory<SengWebProject.Data.SengWebProjectContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Shipment</h2>
    <hr />
    @if (shipment is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">OrderID</dt>
            <dd class="col-sm-10">@shipment.OrderID</dd>
            <dt class="col-sm-2">EmployeeID</dt>
            <dd class="col-sm-10">@shipment.EmployeeID</dd>
            <dt class="col-sm-2">ShipmentDate</dt>
            <dd class="col-sm-10">@shipment.ShipmentDate</dd>
            <dt class="col-sm-2">EstimatedDeliveryDate</dt>
            <dd class="col-sm-10">@shipment.EstimatedDeliveryDate</dd>
            <dt class="col-sm-2">LastModified</dt>
            <dd class="col-sm-10">@shipment.LastModified</dd>
        </dl>
        <div>
            <a href="@($"/shipments/edit?shipmentid={shipment.ShipmentID}")">Edit</a> |
            <a href="@($"/shipments")">Back to List</a>
        </div>
    }
</div>

@code {
    private Shipment? shipment;

    [SupplyParameterFromQuery]
    private int ShipmentID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        shipment = await context.Shipments.FirstOrDefaultAsync(m => m.ShipmentID == ShipmentID);

        if (shipment is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
